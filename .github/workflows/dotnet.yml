name: .NET

on:
  push:
    branches: [ master ]
    paths:
      - "apis/poi/**"
  pull_request:
    branches: [ master ]
    paths:
      - "apis/poi/**"
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: 2.1.x
    - name: Restore dependencies
      run: dotnet restore  apis/poi/
    - name: Build
      run: dotnet build --no-restore apis/poi/
    - name: Test
      run: dotnet test --no-build --verbosity normal apis/poi/
    - name: Docker Build
      run: docker build apis/poi/web
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });         
  deploy:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      rg-name: openhackcaerg
      app-name: openhackcaepoi
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - uses: actions/checkout@v2
    - name: Create tag
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ github.run_number }}",
              sha: context.sha
            })
    - name: Docker login
      run: docker login ${{secrets.ACR_REPO}} -u ${{secrets.ACR_USER}} -p ${{secrets.ACR_PWD}}
    - name: Docker Build
      run: docker build -t "${{secrets.ACR_REPO}}/devopsoh/api-poi:${{ github.run_number }}" apis/poi/web
    - name: Docker Publish
      run: docker push "${{secrets.ACR_REPO}}/devopsoh/api-poi:${{ github.run_number }}"
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackcaepoi'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_1855eeed0e204c6a91a220e6c81926b2 }}
        images: '${{ secrets.ACR_REPO }}/devopsoh/api-poi:${{ github.run_number }}'
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Workflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });  